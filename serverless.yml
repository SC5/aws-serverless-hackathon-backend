# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    v1.docs.serverless.com
#
# Happy Coding!

service: ${serviceName} # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs4.3

# you can overwrite defaults here
defaults:
  stage: dev
  region: eu-west-1
  timeout: 3
  memory: 512

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#  exclude:
#    - exclude-me.js
#  artifact: my-service-code.zip

functions:
  blog:
    handler: blog/posts/handler.handler

#   you can add any of the following events
    events:
      - http:
          path: posts
          method: get
          cors: true
      - http:
          path: posts
          method: post
          cors: true
      - http:
          path: posts/{id}
          method: put
          cors: true
      - http:
          path: posts/{id}
          method: delete
          cors: true

#     - s3: ${bucket}
#     - schedule: rate(10 minutes)
#     - sns: greeter-topic

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
resources:
  Resources:
    BlogTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: dev-${serviceName}
    IamPolicyLambda:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: dev-aws-serverless-hackathon-lambda
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"]
              Resource: "arn:aws:logs:${region}:*:*"
            - Effect: Allow
              Action: ["dynamodb:Scan", "dynamodb:PutItem", "dynamodb:DeleteItem"]
              Resource: arn:aws:dynamodb:${region}:*:*
        Roles:
          - Ref: IamRoleLambda

plugins:
  - serverless-mocha-plugin
#  - serverless-dynamodb-local
