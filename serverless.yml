service: ${serviceName}

provider:
  name: aws
  runtime: nodejs4.3

defaults:
  stage: dev
  region: eu-west-1
  timeout: 3
  memory: 512
  exclude:
    - .git

functions:
  createPost:
    handler: blog/posts/handler.create
    events:
      - http:
          path: posts/create
          method: post
          cors: true
  getPosts:
    handler: blog/posts/handler.get
    events:
      - http:
          path: posts
          method: get
          cors: true
  updatePost:
    handler: blog/posts/handler.update
    events:
      - http:
          path: posts/{id}/update
          method: put
          cors: true
  removePost:
    handler: blog/posts/handler.remove
    events:
      - http:
          path: posts/{id}/delete
          method: delete
          cors: true

resources:
  Resources:
    BlogTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: dev-${serviceName}
    IamPolicyLambda:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: dev-aws-serverless-hackathon-lambda
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"]
              Resource: "arn:aws:logs:${region}:*:*"
            - Effect: Allow
              Action: ["dynamodb:Scan", "dynamodb:PutItem", "dynamodb:DeleteItem"]
              Resource: arn:aws:dynamodb:${region}:*:*
        Roles:
          - Ref: IamRoleLambda

plugins:
  - serverless-mocha-plugin
